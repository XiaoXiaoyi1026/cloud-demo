server:
  port: 10010
spring:
  application:
    name: gateway
  cloud:
    nacos:
      server-addr: localhost:8848
      # 使用nginx反向代理
    #      server-addr: localhost:81
      # 使用docker-compose部署集群, 可以使用容器名称进行服务访问
#      server-addr: nacos:8848
    gateway:
      globalcors: # 全局的跨域处理
        add-to-simple-url-handler-mapping: true # 解决options请求被拦截问题
        corsConfigurations:
          '[/**]':
            allowedOrigins: # 允许哪些网站的跨域请求
              - "http://localhost:5500"
              - "https://www.leyou.com"
            allowedMethods: # 允许的跨域ajax的请求方式
              - "GET"
              - "POST"
              - "DELETE"
              - "PUT"
              - "OPTIONS"
            allowedHeaders: "*" # 允许在请求中携带的头信息
            allowCredentials: true # 是否允许携带cookie
            maxAge: 360000 # 这次跨域检测的有效期, 单位秒
      routes:
        # 路由路标, 必须唯一
        - id: user-service
          # 路由的目标地址, 支持lb和http两种
          uri: lb://userservice
          # 路由断言, 判断请求路径是否该为我管
          predicates:
            # 路径断言, 判断请求路径是否满足以/user/开头
            - Path=/user/**
        #          filters:
        #            - AddRequestHeader=Truth, itcast is freaking awesome!
        - id: order-service
          uri: lb://orderservice
          # 断言规则间是与的关系
          predicates:
            - Path=/order/**
            # 限制用户的最早可访问时间
            # - After=2031-01-20T17:42:47.789-07:00[America/Denver]
            # 限制用户的最后可访问时间
            - Before=2031-01-20T17:42:47.789-07:00[America/Denver]
      # 全局过滤器, 对每一个路由都生效
      default-filters:
        - AddRequestHeader=Truth, xiaoxiaoyi is freaking awesome!